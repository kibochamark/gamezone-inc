// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Inventory {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String    @unique
  category      Category? @relation(fields: [categoryId], references: [id])
  categoryId    String?   @db.ObjectId
  quantity      Int
  buyingprice   Float     @default(0.00)
  price         Float
  threshold     Int
  frequencySold Int       @default(0)

  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  Sales Sales[]

  LowStockSummary LowStockSummary[]

  CreditedSummary CreditedSummary[]

  AssetAccount      AssetAccount[]
  NewRevenueAccount NewRevenueAccount[]

  WriteOffAccount WriteOffAccount[]
}

enum ProductStatus {
  SOLD
  RETURNED
  CREDITED
}

enum SaleType {
  DEBIT
  CREDIT
}

model Sales {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  inventory    Inventory     @relation(fields: [inventoryId], references: [id])
  inventoryId  String        @db.ObjectId
  kindeId      String
  quantitySold Int
  priceSold    Float
  // credit columns
  type         SaleType      @default(DEBIT)
  status       ProductStatus @default(SOLD)
  vendor       String? //person credited to

  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Expenses {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  kindeId     String
  kindeName   String
  expensename String
  paymenttype PaymentType @default(CASH)
  category    Category    @relation(fields: [categoryId], references: [id])
  categoryId  String      @db.ObjectId
  amount      Float
  description String
  created_at  DateTime    @default(now())
  updated_at  DateTime    @default(now())
}

model Services {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  kindeId     String      @db.String
  kindeName   String      @db.String
  name        String      @db.String
  price       Float
  paymenttype PaymentType @default(CASH)
  created_at  DateTime    @default(now())
  updated_at  DateTime    @default(now())

  NewRevenueAccount NewRevenueAccount[]
}

model SalesSummary {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  totalSales  Int
  totalProfit Float
  periodType  PeriodType @default(DAY)
  created_at  DateTime   @default(now())
  updated_at  DateTime   @default(now())
}

model ExpenseSummary {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  totalExpenses Float
  periodType    PeriodType @default(DAY)
  created_at    DateTime   @default(now())
}

model LowStockSummary {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  inventoryId String    @db.ObjectId
  quantity    Int
  alertDate   DateTime  @default(now())
}

model ServiceSummary {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  totalServices Float
  date          DateTime   @default(now())
  periodType    PeriodType @default(DAY)
}

model CreditedSummary {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  inventory     Inventory  @relation(fields: [inventoryId], references: [id])
  inventoryId   String     @db.ObjectId
  totalCredited Float
  creditDate    DateTime   @default(now())
  status        Status     @default(PENDING)
  periodType    PeriodType @default(DAY)
  toWho         String
}

model Category {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String       @unique
  type       CategoryType @default(INVENTORY)
  created_at DateTime     @default(now())
  updated_at DateTime     @default(now())

  Inventory Inventory[]
  Expenses  Expenses[]
}

enum PeriodType {
  DAY
  WEEK
  MONTH
}

enum Status {
  PENDING
  PAID
  RETURNED
}

enum CategoryType {
  EXPENSE
  INVENTORY
}

// accounts
model MainAccount {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  accountRef  String @unique
  accountName String @default("Capital account")

  debitTotal  Float    @default(0)
  creditTotal Float    @default(0)
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
}

model CASHBALANCE {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  amount     Float
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

// Revamped accounts
model AssetAccount {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  accountRef      String           @unique
  accounttype     AssetAccountType
  customername    String?
  customercontact String?
  paymenttype     PaymentType
  productId       String?          @db.ObjectId
  product         Inventory?       @relation(fields: [productId], references: [id])
  debitTotal      Float            @default(0)
  creditTotal     Float            @default(0)

  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

enum AssetAccountType {
  CASHACCOUNT
  ACCOUNTRECEIVABLE
  INVENTORYACCOUNT
}

enum PaymentType {
  CASH
  Mpesa
}

model EquityAccount {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  accountRef  String            @unique
  accounttype EquityAccountType
  paymenttype PaymentType
  debitTotal  Float             @default(0)
  creditTotal Float             @default(0)

  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

enum EquityAccountType {
  CAPITALACCOUNT
  RETAINEDEARNINGS
}

model NewRevenueAccount {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  accountRef  String             @unique
  accounttype RevenueAccountType
  paymenttype PaymentType
  productId   String?            @db.ObjectId
  product     Inventory?         @relation(fields: [productId], references: [id])
  serviceId   String?            @db.ObjectId
  service     Services?          @relation(fields: [serviceId], references: [id])
  debitTotal  Float              @default(0)
  creditTotal Float              @default(0)

  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

enum RevenueAccountType {
  SALESACCOUNT
  SERVICEACCOUNT
}

model NewExpenseAccount {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  accountRef  String      @unique
  expensetype String
  paymenttype PaymentType
  debitTotal  Float       @default(0)
  creditTotal Float       @default(0)

  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model WriteOffAccount {
  id          String              @id @default(auto()) @map("_id") @db.ObjectId
  accountRef  String              @unique
  accounttype WriteOffAccountType
  paymenttype PaymentType
  productId   String?             @db.ObjectId
  product     Inventory?          @relation(fields: [productId], references: [id])
  debitTotal  Float               @default(0)
  creditTotal Float               @default(0)

  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

enum WriteOffAccountType {
  DISPOSABLEACCOUNT
  BADDEBT
}
